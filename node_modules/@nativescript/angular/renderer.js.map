{"version":3,"file":"renderer.js","sources":["renderer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAEO;AACP;AACA;AACA;;;;;;;;;;;;;2DAAoC;AACpsourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar view_1 = require(\"@nativescript/core/ui/core/view\");\nvar application_1 = require(\"@nativescript/core/application\");\nvar profiling_1 = require(\"@nativescript/core/profiling\");\nvar platform_providers_1 = require(\"./platform-providers\");\nvar view_util_1 = require(\"./view-util\");\nvar element_registry_1 = require(\"./element-registry\");\nvar trace_1 = require(\"./trace\");\n// CONTENT_ATTR not exported from NativeScript_renderer - we need it for styles application.\nvar COMPONENT_REGEX = /%COMP%/g;\nexports.COMPONENT_VARIABLE = \"%COMP%\";\nexports.HOST_ATTR = \"_nghost-\" + exports.COMPONENT_VARIABLE;\nexports.CONTENT_ATTR = \"_ngcontent-\" + exports.COMPONENT_VARIABLE;\nvar ATTR_SANITIZER = /-/g;\nvar NativeScriptRendererFactory = /** @class */ (function () {\n    function NativeScriptRendererFactory(rootView, device, zone) {\n        this.zone = zone;\n        this.componentRenderers = new Map();\n        this.viewUtil = new view_util_1.ViewUtil(device);\n        this.setRootNgView(rootView);\n        this.defaultRenderer = new NativeScriptRenderer(this.rootNgView, zone, this.viewUtil);\n    }\n    NativeScriptRendererFactory.prototype.setRootNgView = function (rootView) {\n        if (!rootView) {\n            rootView = platform_providers_1.getRootPage();\n        }\n        rootView.nodeName = \"NONE\";\n        this.rootNgView = rootView;\n    };\n    NativeScriptRendererFactory.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        var renderer = this.componentRenderers.get(type.id);\n        if (renderer) {\n            if (renderer instanceof EmulatedRenderer) {\n                renderer.applyToHost(element);\n            }\n            return renderer;\n        }\n        if (type.encapsulation === core_1.ViewEncapsulation.None) {\n            type.styles.map(function (s) { return s.toString(); }).forEach(addStyleToCss);\n            renderer = this.defaultRenderer;\n        }\n        else {\n            renderer = new EmulatedRenderer(type, this.rootNgView, this.zone, this.viewUtil);\n            renderer.applyToHost(element);\n        }\n        this.componentRenderers.set(type.id, renderer);\n        return renderer;\n    };\n    NativeScriptRendererFactory.prototype.ngOnDestroy = function () {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRendererFactory.ngOnDestroy()\");\n        }\n        while (this.rootNgView && this.rootNgView.firstChild) {\n            this.viewUtil.removeChild(this.rootNgView, this.rootNgView.firstChild);\n        }\n    };\n    NativeScriptRendererFactory = __decorate([\n        core_1.Injectable(),\n        __param(0, core_1.Optional()), __param(0, core_1.Inject(platform_providers_1.APP_ROOT_VIEW)),\n        __param(1, core_1.Inject(platform_providers_1.DEVICE)),\n        __metadata(\"design:paramtypes\", [view_1.View, Object, core_1.NgZone])\n    ], NativeScriptRendererFactory);\n    return NativeScriptRendererFactory;\n}());\nexports.NativeScriptRendererFactory = NativeScriptRendererFactory;\nvar NativeScriptRenderer = /** @class */ (function (_super) {\n    __extends(NativeScriptRenderer, _super);\n    function NativeScriptRenderer(rootView, zone, viewUtil) {\n        var _this = _super.call(this) || this;\n        _this.rootView = rootView;\n        _this.zone = zone;\n        _this.viewUtil = viewUtil;\n        _this.data = Object.create(null);\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer created\");\n        }\n        return _this;\n    }\n    NativeScriptRenderer.prototype.appendChild = function (parent, newChild) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.appendChild child: \" + newChild + \" parent: \" + parent);\n        }\n        this.viewUtil.insertChild(parent, newChild);\n    };\n    NativeScriptRenderer.prototype.insertBefore = function (parent, newChild, _a) {\n        var previous = _a.previous, next = _a.next;\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.insertBefore child: \" + newChild + \" \" +\n                (\"parent: \" + parent + \" previous: \" + previous + \" next: \" + next));\n        }\n        this.viewUtil.insertChild(parent, newChild, previous, next);\n    };\n    NativeScriptRenderer.prototype.removeChild = function (parent, oldChild) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.removeChild child: \" + oldChild + \" parent: \" + parent);\n        }\n        this.viewUtil.removeChild(parent, oldChild);\n    };\n    NativeScriptRenderer.prototype.selectRootElement = function (selector) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.selectRootElement: \" + selector);\n        }\n        if (selector && selector[0] === \"#\") {\n            var result = view_1.getViewById(this.rootView, selector.slice(1));\n            return (result || this.rootView);\n        }\n        return this.rootView;\n    };\n    NativeScriptRenderer.prototype.parentNode = function (node) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.parentNode for node: \" + node + \" is \" + node.parentNode);\n        }\n        return node.parentNode;\n    };\n    NativeScriptRenderer.prototype.nextSibling = function (node) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.nextSibling of \" + node + \" is \" + node.nextSibling);\n        }\n        return {\n            previous: node,\n            next: node.nextSibling,\n        };\n    };\n    NativeScriptRenderer.prototype.createComment = function (_value) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.createComment \" + _value);\n        }\n        return this.viewUtil.createComment();\n    };\n    NativeScriptRenderer.prototype.createElement = function (name, _namespace) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.createElement: \" + name);\n        }\n        return this.viewUtil.createView(name);\n    };\n    NativeScriptRenderer.prototype.createText = function (_value) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.createText \" + _value);\n        }\n        return this.viewUtil.createText();\n    };\n    NativeScriptRenderer.prototype.createViewRoot = function (hostElement) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.createViewRoot \" + hostElement.nodeName);\n        }\n        return hostElement;\n    };\n    NativeScriptRenderer.prototype.projectNodes = function (parentElement, nodes) {\n        var _this = this;\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.projectNodes\");\n        }\n        nodes.forEach(function (node) { return _this.viewUtil.insertChild(parentElement, node); });\n    };\n    NativeScriptRenderer.prototype.destroy = function () {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.destroy\");\n        }\n        // Seems to be called on component dispose only (router outlet)\n        // TODO: handle this when we resolve routing and navigation.\n    };\n    NativeScriptRenderer.prototype.setAttribute = function (view, name, value, namespace) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setAttribute \" + view + \" : \" + name + \" = \" + value + \", namespace: \" + namespace);\n        }\n        return this.viewUtil.setProperty(view, name, value, namespace);\n    };\n    NativeScriptRenderer.prototype.removeAttribute = function (_el, _name) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.removeAttribute \" + _el + \": \" + _name);\n        }\n    };\n    NativeScriptRenderer.prototype.setProperty = function (view, name, value) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setProperty \" + view + \" : \" + name + \" = \" + value);\n        }\n        return this.viewUtil.setProperty(view, name, value);\n    };\n    NativeScriptRenderer.prototype.addClass = function (view, name) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.addClass \" + name);\n        }\n        this.viewUtil.addClass(view, name);\n    };\n    NativeScriptRenderer.prototype.removeClass = function (view, name) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.removeClass \" + name);\n        }\n        this.viewUtil.removeClass(view, name);\n    };\n    NativeScriptRenderer.prototype.setStyle = function (view, styleName, value, _flags) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setStyle: \" + styleName + \" = \" + value);\n        }\n        this.viewUtil.setStyle(view, styleName, value);\n    };\n    NativeScriptRenderer.prototype.removeStyle = function (view, styleName, _flags) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.removeStyle: ${styleName}\");\n        }\n        this.viewUtil.removeStyle(view, styleName);\n    };\n    // Used only in debug mode to serialize property changes to comment nodes,\n    // such as <template> placeholders.\n    NativeScriptRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setBindingDebugInfo: \" + renderElement + \", \" + propertyName + \" = \" + propertyValue);\n        }\n    };\n    NativeScriptRenderer.prototype.setElementDebugInfo = function (renderElement, _info /*RenderDebugInfo*/) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setElementDebugInfo: \" + renderElement);\n        }\n    };\n    NativeScriptRenderer.prototype.invokeElementMethod = function (_renderElement, methodName, args) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.invokeElementMethod \" + methodName + \" \" + args);\n        }\n    };\n    NativeScriptRenderer.prototype.setValue = function (_renderNode, _value) {\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.setValue renderNode: \" + _renderNode + \", value: \" + _value);\n        }\n    };\n    NativeScriptRenderer.prototype.listen = function (renderElement, eventName, callback) {\n        var _this = this;\n        if (trace_1.isLogEnabled()) {\n            trace_1.rendererLog(\"NativeScriptRenderer.listen: \" + eventName);\n        }\n        // Explicitly wrap in zone\n        var zonedCallback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this.zone.run(function () {\n                callback.apply(undefined, args);\n            });\n        };\n        renderElement.on(eventName, zonedCallback);\n        if (eventName === view_1.View.loadedEvent && renderElement.isLoaded) {\n            var notifyData = { eventName: view_1.View.loadedEvent, object: renderElement };\n            zonedCallback(notifyData);\n        }\n        return function () { return renderElement.off(eventName, zonedCallback); };\n    };\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"appendChild\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"insertBefore\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"removeChild\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Object)\n    ], NativeScriptRenderer.prototype, \"selectRootElement\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], NativeScriptRenderer.prototype, \"parentNode\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], NativeScriptRenderer.prototype, \"nextSibling\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", element_registry_1.InvisibleNode)\n    ], NativeScriptRenderer.prototype, \"createComment\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String]),\n        __metadata(\"design:returntype\", Object)\n    ], NativeScriptRenderer.prototype, \"createElement\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", element_registry_1.InvisibleNode)\n    ], NativeScriptRenderer.prototype, \"createText\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], NativeScriptRenderer.prototype, \"createViewRoot\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"projectNodes\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"destroy\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, String, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setAttribute\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"removeAttribute\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setProperty\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"addClass\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"removeClass\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setStyle\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"removeStyle\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setBindingDebugInfo\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setElementDebugInfo\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"invokeElementMethod\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], NativeScriptRenderer.prototype, \"setValue\", null);\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Function]),\n        __metadata(\"design:returntype\", Function)\n    ], NativeScriptRenderer.prototype, \"listen\", null);\n    return NativeScriptRenderer;\n}(core_1.Renderer2));\nexports.NativeScriptRenderer = NativeScriptRenderer;\nvar EmulatedRenderer = /** @class */ (function (_super) {\n    __extends(EmulatedRenderer, _super);\n    function EmulatedRenderer(component, rootView, zone, viewUtil) {\n        var _this = _super.call(this, rootView, zone, viewUtil) || this;\n        var componentId = component.id.replace(ATTR_SANITIZER, \"_\");\n        _this.contentAttr = replaceNgAttribute(exports.CONTENT_ATTR, componentId);\n        _this.hostAttr = replaceNgAttribute(exports.HOST_ATTR, componentId);\n        _this.addStyles(component.styles, componentId);\n        return _this;\n    }\n    EmulatedRenderer.prototype.applyToHost = function (view) {\n        _super.prototype.setAttribute.call(this, view, this.hostAttr, \"\");\n    };\n    EmulatedRenderer.prototype.appendChild = function (parent, newChild) {\n        _super.prototype.appendChild.call(this, parent, newChild);\n    };\n    EmulatedRenderer.prototype.createElement = function (parent, name) {\n        var view = _super.prototype.createElement.call(this, parent, name);\n        // Set an attribute to the view to scope component-specific css.\n        // The property name is pre-generated by Angular.\n        _super.prototype.setAttribute.call(this, view, this.contentAttr, \"\");\n        return view;\n    };\n    EmulatedRenderer.prototype.addStyles = function (styles, componentId) {\n        styles.map(function (s) { return s.toString(); })\n            .map(function (s) { return replaceNgAttribute(s, componentId); })\n            .forEach(addScopedStyleToCss);\n    };\n    __decorate([\n        profiling_1.profile,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], EmulatedRenderer.prototype, \"addStyles\", null);\n    return EmulatedRenderer;\n}(NativeScriptRenderer));\nvar ɵ0 = function addStyleToCss(style) {\n    application_1.addCss(style);\n};\nexports.ɵ0 = ɵ0;\n// tslint:disable-next-line\nvar addStyleToCss = profiling_1.profile('\"renderer\".addStyleToCss', ɵ0);\nvar ɵ1 = function addScopedStyleToCss(style) {\n    application_1.addCss(style, true);\n};\nexports.ɵ1 = ɵ1;\n// tslint:disable-next-line\nvar addScopedStyleToCss = profiling_1.profile('\"renderer\".addScopedStyleToCss', ɵ1);\nfunction replaceNgAttribute(input, componentId) {\n    return input.replace(COMPONENT_REGEX, componentId);\n}\n"]}