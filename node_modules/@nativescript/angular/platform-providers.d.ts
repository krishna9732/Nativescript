import { InjectionToken, OnDestroy } from "@angular/core";
import { Frame, NavigatedData } from "@nativescript/core/ui/frame";
import { View } from "@nativescript/core/ui/core/view";
import { Page } from "@nativescript/core/ui/page";
import { Device } from "@nativescript/core/platform";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare const APP_ROOT_VIEW: InjectionToken<View>;
export declare const DEVICE: InjectionToken<Device>;
export declare const PAGE_FACTORY: InjectionToken<PageFactory>;
export declare function setRootPage(page: Page): void;
export declare function getRootPage(): Page;
export declare function getDefaultPage(): Page;
export declare const defaultPageProvider: {
    provide: typeof Page;
    useFactory: typeof getDefaultPage;
};
export declare function getDefaultFrame(): Frame;
export declare const defaultFrameProvider: {
    provide: typeof Frame;
    useFactory: typeof getDefaultFrame;
};
export declare function getDefaultDevice(): Device;
export declare const defaultDeviceProvider: {
    provide: InjectionToken<Device>;
    useFactory: typeof getDefaultDevice;
};
export declare type PageFactory = (options: PageFactoryOptions) => Page;
export interface PageFactoryOptions {
    isBootstrap?: boolean;
    isLivesync?: boolean;
    isModal?: boolean;
    isNavigation?: boolean;
    componentType?: any;
}
export declare const defaultPageFactory: PageFactory;
export declare const defaultPageFactoryProvider: {
    provide: InjectionToken<PageFactory>;
    useValue: PageFactory;
};
export declare class FrameService {
    getFrame(): Frame;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FrameService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<FrameService>;
}
export declare class PageService implements OnDestroy {
    page: Page;
    private _inPage$;
    private _pageEvents$;
    get inPage(): boolean;
    get inPage$(): Observable<boolean>;
    get pageEvents$(): Observable<NavigatedData>;
    constructor(page: Page);
    ngOnDestroy(): void;
    private pageEvent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PageService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<PageService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0tcHJvdmlkZXJzLmQudHMiLCJzb3VyY2VzIjpbInBsYXRmb3JtLXByb3ZpZGVycy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBPbkRlc3Ryb3kgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRnJhbWUsIE5hdmlnYXRlZERhdGEgfSBmcm9tIFwiQG5hdGl2ZXNjcmlwdC9jb3JlL3VpL2ZyYW1lXCI7XG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcIkBuYXRpdmVzY3JpcHQvY29yZS91aS9jb3JlL3ZpZXdcIjtcbmltcG9ydCB7IFBhZ2UgfSBmcm9tIFwiQG5hdGl2ZXNjcmlwdC9jb3JlL3VpL3BhZ2VcIjtcbmltcG9ydCB7IERldmljZSB9IGZyb20gXCJAbmF0aXZlc2NyaXB0L2NvcmUvcGxhdGZvcm1cIjtcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQVBQX1JPT1RfVklFVzogSW5qZWN0aW9uVG9rZW48Vmlldz47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBERVZJQ0U6IEluamVjdGlvblRva2VuPERldmljZT47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBQQUdFX0ZBQ1RPUlk6IEluamVjdGlvblRva2VuPFBhZ2VGYWN0b3J5PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHNldFJvb3RQYWdlKHBhZ2U6IFBhZ2UpOiB2b2lkO1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gZ2V0Um9vdFBhZ2UoKTogUGFnZTtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIGdldERlZmF1bHRQYWdlKCk6IFBhZ2U7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBkZWZhdWx0UGFnZVByb3ZpZGVyOiB7XG4gICAgcHJvdmlkZTogdHlwZW9mIFBhZ2U7XG4gICAgdXNlRmFjdG9yeTogdHlwZW9mIGdldERlZmF1bHRQYWdlO1xufTtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIGdldERlZmF1bHRGcmFtZSgpOiBGcmFtZTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IGRlZmF1bHRGcmFtZVByb3ZpZGVyOiB7XG4gICAgcHJvdmlkZTogdHlwZW9mIEZyYW1lO1xuICAgIHVzZUZhY3Rvcnk6IHR5cGVvZiBnZXREZWZhdWx0RnJhbWU7XG59O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gZ2V0RGVmYXVsdERldmljZSgpOiBEZXZpY2U7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBkZWZhdWx0RGV2aWNlUHJvdmlkZXI6IHtcbiAgICBwcm92aWRlOiBJbmplY3Rpb25Ub2tlbjxEZXZpY2U+O1xuICAgIHVzZUZhY3Rvcnk6IHR5cGVvZiBnZXREZWZhdWx0RGV2aWNlO1xufTtcbmV4cG9ydCBkZWNsYXJlIHR5cGUgUGFnZUZhY3RvcnkgPSAob3B0aW9uczogUGFnZUZhY3RvcnlPcHRpb25zKSA9PiBQYWdlO1xuZXhwb3J0IGludGVyZmFjZSBQYWdlRmFjdG9yeU9wdGlvbnMge1xuICAgIGlzQm9vdHN0cmFwPzogYm9vbGVhbjtcbiAgICBpc0xpdmVzeW5jPzogYm9vbGVhbjtcbiAgICBpc01vZGFsPzogYm9vbGVhbjtcbiAgICBpc05hdmlnYXRpb24/OiBib29sZWFuO1xuICAgIGNvbXBvbmVudFR5cGU/OiBhbnk7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBkZWZhdWx0UGFnZUZhY3Rvcnk6IFBhZ2VGYWN0b3J5O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgZGVmYXVsdFBhZ2VGYWN0b3J5UHJvdmlkZXI6IHtcbiAgICBwcm92aWRlOiBJbmplY3Rpb25Ub2tlbjxQYWdlRmFjdG9yeT47XG4gICAgdXNlVmFsdWU6IFBhZ2VGYWN0b3J5O1xufTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZyYW1lU2VydmljZSB7XG4gICAgZ2V0RnJhbWUoKTogRnJhbWU7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQYWdlU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcGFnZTogUGFnZTtcbiAgICBwcml2YXRlIF9pblBhZ2UkO1xuICAgIHByaXZhdGUgX3BhZ2VFdmVudHMkO1xuICAgIGdldCBpblBhZ2UoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5QYWdlJCgpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICAgIGdldCBwYWdlRXZlbnRzJCgpOiBPYnNlcnZhYmxlPE5hdmlnYXRlZERhdGE+O1xuICAgIGNvbnN0cnVjdG9yKHBhZ2U6IFBhZ2UpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBwYWdlRXZlbnQ7XG59XG4iXX0=