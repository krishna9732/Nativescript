import { LocationStrategy } from "@angular/common";
import { UrlSegmentGroup, ActivatedRouteSnapshot } from "@angular/router";
import { NavigationTransition, Frame } from "@nativescript/core/ui/frame";
import { FrameService } from "../platform-providers";
import * as ɵngcc0 from '@angular/core';
export declare class Outlet {
    showingModal: boolean;
    modalNavigationDepth: number;
    parent: Outlet;
    isPageNavigationBack: boolean;
    outletKeys: Array<string>;
    frames: Array<Frame>;
    path: string;
    pathByOutlets: string;
    states: Array<LocationState>;
    isNSEmptyOutlet: boolean;
    shouldDetach: boolean;
    constructor(outletKey: string, path: string, pathByOutlets: string, modalNavigationDepth?: number);
    containsFrame(frame: Frame): boolean;
    peekState(): LocationState;
    containsTopState(stateUrl: string): boolean;
    getFrameToBack(): Frame;
}
export interface NavigationOptions {
    clearHistory?: boolean;
    animated?: boolean;
    transition?: NavigationTransition;
}
export interface LocationState {
    segmentGroup: UrlSegmentGroup;
    isRootSegmentGroup: boolean;
    isPageNavigation: boolean;
    frame?: Frame;
}
export declare class NSLocationStrategy extends LocationStrategy {
    private frameService;
    private outlets;
    private currentOutlet;
    private popStateCallbacks;
    private _currentNavigationOptions;
    private currentUrlTree;
    _modalNavigationDepth: number;
    constructor(frameService: FrameService);
    path(): string;
    prepareExternalUrl(internal: string): string;
    pushState(state: any, title: string, url: string, queryParams: string): void;
    pushStateInternal(state: any, title: string, url: string, queryParams: string): void;
    replaceState(state: any, title: string, url: string, queryParams: string): void;
    forward(): void;
    back(outlet?: Outlet, frame?: Frame): void;
    canGoBack(outlet?: Outlet): boolean;
    onPopState(fn: (_: any) => any): void;
    getBaseHref(): string;
    private callPopState;
    toString(): string;
    _beginBackPageNavigation(frame: Frame): void;
    _finishBackPageNavigation(frame: Frame): void;
    _beginModalNavigation(frame: Frame): void;
    _closeModalNavigation(): void;
    _beginPageNavigation(frame: Frame): NavigationOptions;
    _setNavigationOptions(options: NavigationOptions): void;
    _getOutlets(): Array<Outlet>;
    updateOutletFrame(outlet: Outlet, frame: Frame, isEmptyOutletFrame: boolean): void;
    clearOutlet(frame: Frame): void;
    getSegmentGroupFullPath(segmentGroup: UrlSegmentGroup): string;
    getRouteFullPath(currentRoute: any): string;
    getPathByOutlets(urlSegmentGroup: any): string;
    findOutlet(outletKey: string, activatedRouteSnapshot?: ActivatedRouteSnapshot): Outlet;
    private findOutletByModal;
    private getOutletByFrame;
    private updateStates;
    private updateParentsStates;
    private createOutlet;
    private getSegmentGroupByOutlet;
    private updateSegmentGroup;
    private upsertModalOutlet;
    private getOutletKey;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NSLocationStrategy, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NSLocationStrategy>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnMtbG9jYXRpb24tc3RyYXRlZ3kuZC50cyIsInNvdXJjZXMiOlsibnMtbG9jYXRpb24tc3RyYXRlZ3kuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2NhdGlvblN0cmF0ZWd5IH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHsgVXJsU2VnbWVudEdyb3VwLCBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90IH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgTmF2aWdhdGlvblRyYW5zaXRpb24sIEZyYW1lIH0gZnJvbSBcIkBuYXRpdmVzY3JpcHQvY29yZS91aS9mcmFtZVwiO1xuaW1wb3J0IHsgRnJhbWVTZXJ2aWNlIH0gZnJvbSBcIi4uL3BsYXRmb3JtLXByb3ZpZGVyc1wiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3V0bGV0IHtcbiAgICBzaG93aW5nTW9kYWw6IGJvb2xlYW47XG4gICAgbW9kYWxOYXZpZ2F0aW9uRGVwdGg6IG51bWJlcjtcbiAgICBwYXJlbnQ6IE91dGxldDtcbiAgICBpc1BhZ2VOYXZpZ2F0aW9uQmFjazogYm9vbGVhbjtcbiAgICBvdXRsZXRLZXlzOiBBcnJheTxzdHJpbmc+O1xuICAgIGZyYW1lczogQXJyYXk8RnJhbWU+O1xuICAgIHBhdGg6IHN0cmluZztcbiAgICBwYXRoQnlPdXRsZXRzOiBzdHJpbmc7XG4gICAgc3RhdGVzOiBBcnJheTxMb2NhdGlvblN0YXRlPjtcbiAgICBpc05TRW1wdHlPdXRsZXQ6IGJvb2xlYW47XG4gICAgc2hvdWxkRGV0YWNoOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKG91dGxldEtleTogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIHBhdGhCeU91dGxldHM6IHN0cmluZywgbW9kYWxOYXZpZ2F0aW9uRGVwdGg/OiBudW1iZXIpO1xuICAgIGNvbnRhaW5zRnJhbWUoZnJhbWU6IEZyYW1lKTogYm9vbGVhbjtcbiAgICBwZWVrU3RhdGUoKTogTG9jYXRpb25TdGF0ZTtcbiAgICBjb250YWluc1RvcFN0YXRlKHN0YXRlVXJsOiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGdldEZyYW1lVG9CYWNrKCk6IEZyYW1lO1xufVxuZXhwb3J0IGludGVyZmFjZSBOYXZpZ2F0aW9uT3B0aW9ucyB7XG4gICAgY2xlYXJIaXN0b3J5PzogYm9vbGVhbjtcbiAgICBhbmltYXRlZD86IGJvb2xlYW47XG4gICAgdHJhbnNpdGlvbj86IE5hdmlnYXRpb25UcmFuc2l0aW9uO1xufVxuZXhwb3J0IGludGVyZmFjZSBMb2NhdGlvblN0YXRlIHtcbiAgICBzZWdtZW50R3JvdXA6IFVybFNlZ21lbnRHcm91cDtcbiAgICBpc1Jvb3RTZWdtZW50R3JvdXA6IGJvb2xlYW47XG4gICAgaXNQYWdlTmF2aWdhdGlvbjogYm9vbGVhbjtcbiAgICBmcmFtZT86IEZyYW1lO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTlNMb2NhdGlvblN0cmF0ZWd5IGV4dGVuZHMgTG9jYXRpb25TdHJhdGVneSB7XG4gICAgcHJpdmF0ZSBmcmFtZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBvdXRsZXRzO1xuICAgIHByaXZhdGUgY3VycmVudE91dGxldDtcbiAgICBwcml2YXRlIHBvcFN0YXRlQ2FsbGJhY2tzO1xuICAgIHByaXZhdGUgX2N1cnJlbnROYXZpZ2F0aW9uT3B0aW9ucztcbiAgICBwcml2YXRlIGN1cnJlbnRVcmxUcmVlO1xuICAgIF9tb2RhbE5hdmlnYXRpb25EZXB0aDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKGZyYW1lU2VydmljZTogRnJhbWVTZXJ2aWNlKTtcbiAgICBwYXRoKCk6IHN0cmluZztcbiAgICBwcmVwYXJlRXh0ZXJuYWxVcmwoaW50ZXJuYWw6IHN0cmluZyk6IHN0cmluZztcbiAgICBwdXNoU3RhdGUoc3RhdGU6IGFueSwgdGl0bGU6IHN0cmluZywgdXJsOiBzdHJpbmcsIHF1ZXJ5UGFyYW1zOiBzdHJpbmcpOiB2b2lkO1xuICAgIHB1c2hTdGF0ZUludGVybmFsKHN0YXRlOiBhbnksIHRpdGxlOiBzdHJpbmcsIHVybDogc3RyaW5nLCBxdWVyeVBhcmFtczogc3RyaW5nKTogdm9pZDtcbiAgICByZXBsYWNlU3RhdGUoc3RhdGU6IGFueSwgdGl0bGU6IHN0cmluZywgdXJsOiBzdHJpbmcsIHF1ZXJ5UGFyYW1zOiBzdHJpbmcpOiB2b2lkO1xuICAgIGZvcndhcmQoKTogdm9pZDtcbiAgICBiYWNrKG91dGxldD86IE91dGxldCwgZnJhbWU/OiBGcmFtZSk6IHZvaWQ7XG4gICAgY2FuR29CYWNrKG91dGxldD86IE91dGxldCk6IGJvb2xlYW47XG4gICAgb25Qb3BTdGF0ZShmbjogKF86IGFueSkgPT4gYW55KTogdm9pZDtcbiAgICBnZXRCYXNlSHJlZigpOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBjYWxsUG9wU3RhdGU7XG4gICAgdG9TdHJpbmcoKTogc3RyaW5nO1xuICAgIF9iZWdpbkJhY2tQYWdlTmF2aWdhdGlvbihmcmFtZTogRnJhbWUpOiB2b2lkO1xuICAgIF9maW5pc2hCYWNrUGFnZU5hdmlnYXRpb24oZnJhbWU6IEZyYW1lKTogdm9pZDtcbiAgICBfYmVnaW5Nb2RhbE5hdmlnYXRpb24oZnJhbWU6IEZyYW1lKTogdm9pZDtcbiAgICBfY2xvc2VNb2RhbE5hdmlnYXRpb24oKTogdm9pZDtcbiAgICBfYmVnaW5QYWdlTmF2aWdhdGlvbihmcmFtZTogRnJhbWUpOiBOYXZpZ2F0aW9uT3B0aW9ucztcbiAgICBfc2V0TmF2aWdhdGlvbk9wdGlvbnMob3B0aW9uczogTmF2aWdhdGlvbk9wdGlvbnMpOiB2b2lkO1xuICAgIF9nZXRPdXRsZXRzKCk6IEFycmF5PE91dGxldD47XG4gICAgdXBkYXRlT3V0bGV0RnJhbWUob3V0bGV0OiBPdXRsZXQsIGZyYW1lOiBGcmFtZSwgaXNFbXB0eU91dGxldEZyYW1lOiBib29sZWFuKTogdm9pZDtcbiAgICBjbGVhck91dGxldChmcmFtZTogRnJhbWUpOiB2b2lkO1xuICAgIGdldFNlZ21lbnRHcm91cEZ1bGxQYXRoKHNlZ21lbnRHcm91cDogVXJsU2VnbWVudEdyb3VwKTogc3RyaW5nO1xuICAgIGdldFJvdXRlRnVsbFBhdGgoY3VycmVudFJvdXRlOiBhbnkpOiBzdHJpbmc7XG4gICAgZ2V0UGF0aEJ5T3V0bGV0cyh1cmxTZWdtZW50R3JvdXA6IGFueSk6IHN0cmluZztcbiAgICBmaW5kT3V0bGV0KG91dGxldEtleTogc3RyaW5nLCBhY3RpdmF0ZWRSb3V0ZVNuYXBzaG90PzogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IE91dGxldDtcbiAgICBwcml2YXRlIGZpbmRPdXRsZXRCeU1vZGFsO1xuICAgIHByaXZhdGUgZ2V0T3V0bGV0QnlGcmFtZTtcbiAgICBwcml2YXRlIHVwZGF0ZVN0YXRlcztcbiAgICBwcml2YXRlIHVwZGF0ZVBhcmVudHNTdGF0ZXM7XG4gICAgcHJpdmF0ZSBjcmVhdGVPdXRsZXQ7XG4gICAgcHJpdmF0ZSBnZXRTZWdtZW50R3JvdXBCeU91dGxldDtcbiAgICBwcml2YXRlIHVwZGF0ZVNlZ21lbnRHcm91cDtcbiAgICBwcml2YXRlIHVwc2VydE1vZGFsT3V0bGV0O1xuICAgIHByaXZhdGUgZ2V0T3V0bGV0S2V5O1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=