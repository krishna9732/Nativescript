{"version":3,"file":"router-extensions.js","sources":["router-extensions.js"],"names":[],"mappingsmCAEO;AACP;AACA;AACA;;;;;yKAAyB;AACzB;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ns_location_strategy_1 = require(\"./ns-location-strategy\");\nvar platform_providers_1 = require(\"../platform-providers\");\nvar trace_1 = require(\"../trace\");\nvar page_router_outlet_1 = require(\"./page-router-outlet\");\nvar RouterExtensions = /** @class */ (function () {\n    function RouterExtensions(router, locationStrategy, frameService) {\n        this.router = router;\n        this.locationStrategy = locationStrategy;\n        this.frameService = frameService;\n    }\n    RouterExtensions.prototype.navigate = function (commands, extras) {\n        if (extras) {\n            this.locationStrategy._setNavigationOptions(extras);\n        }\n        return this.router.navigate(commands, extras);\n    };\n    RouterExtensions.prototype.navigateByUrl = function (url, options) {\n        if (options) {\n            this.locationStrategy._setNavigationOptions(options);\n        }\n        return this.router.navigateByUrl(url);\n    };\n    RouterExtensions.prototype.back = function (backNavigationOptions) {\n        if (backNavigationOptions) {\n            this.backOutlets(backNavigationOptions);\n        }\n        else {\n            this.locationStrategy.back();\n        }\n    };\n    RouterExtensions.prototype.canGoBack = function (backNavigationOptions) {\n        var _this = this;\n        var canGoBack = true;\n        if (backNavigationOptions) {\n            var _a = this.findOutletsToBack(backNavigationOptions), outletsToBack = _a.outletsToBack, outlets = _a.outlets;\n            if (outletsToBack.length !== outlets.length) {\n                trace_1.routerError(\"No outlet found relative to activated route\");\n            }\n            else {\n                outletsToBack.forEach(function (outletToBack) {\n                    if (!_this.locationStrategy.canGoBack(outletToBack)) {\n                        canGoBack = false;\n                    }\n                });\n            }\n        }\n        else {\n            canGoBack = this.locationStrategy.canGoBack();\n        }\n        return canGoBack;\n    };\n    RouterExtensions.prototype.backToPreviousPage = function () {\n        this.frameService.getFrame().goBack();\n    };\n    RouterExtensions.prototype.canGoBackToPreviousPage = function () {\n        return this.frameService.getFrame().canGoBack();\n    };\n    RouterExtensions.prototype.backOutlets = function (options) {\n        var _this = this;\n        var _a = this.findOutletsToBack(options), outletsToBack = _a.outletsToBack, outlets = _a.outlets;\n        if (outletsToBack.length !== outlets.length) {\n            trace_1.routerError(\"No outlet found relative to activated route\");\n        }\n        else {\n            outletsToBack.forEach(function (outletToBack) {\n                if (outletToBack.isPageNavigationBack) {\n                    trace_1.routerError(\"Attempted to call startGoBack while going back:\");\n                }\n                else {\n                    _this.locationStrategy.back(outletToBack);\n                }\n            });\n        }\n    };\n    // tslint:disable-next-line:max-line-length\n    RouterExtensions.prototype.findOutletsToBack = function (options) {\n        var outletsToBack = [];\n        var rootRoute = this.router.routerState.root;\n        var outlets = options.outlets;\n        var relativeRoute = options.relativeTo || rootRoute;\n        var relativeRouteOutlet = this.findOutletByRoute(relativeRoute);\n        var isNSEmptyOutlet = relativeRouteOutlet && relativeRouteOutlet.isNSEmptyOutlet;\n        // Lazy named outlet has added 'primary' inner NSEmptyOutlet child.\n        // Take parent route when `relativeTo` option points to the outer named outlet.\n        if (isNSEmptyOutlet && relativeRoute.outlet !== \"primary\") {\n            relativeRoute = relativeRoute.parent || relativeRoute;\n        }\n        var routesToMatch = outlets ? relativeRoute.children : [relativeRoute];\n        outlets = outlets || [relativeRoute.outlet];\n        var _loop_1 = function (index) {\n            var currentRoute = routesToMatch[index];\n            if (outlets.some(function (currentOutlet) { return currentOutlet === currentRoute.outlet; })) {\n                var outlet = this_1.findOutletByRoute(currentRoute);\n                if (outlet) {\n                    outletsToBack.push(outlet);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < routesToMatch.length; index++) {\n            _loop_1(index);\n        }\n        return { outletsToBack: outletsToBack, outlets: outlets };\n    };\n    RouterExtensions.prototype.findOutletByRoute = function (currentRoute) {\n        var outlet;\n        var currentRouteSnapshop = page_router_outlet_1.findTopActivatedRouteNodeForOutlet(currentRoute.snapshot);\n        var outletKey = this.locationStrategy.getRouteFullPath(currentRouteSnapshop);\n        outlet = this.locationStrategy.findOutlet(outletKey, currentRouteSnapshop);\n        return outlet;\n    };\n    RouterExtensions = __decorate([\n        core_1.Injectable(),\n        __metadata(\"design:paramtypes\", [router_1.Router,\n            ns_location_strategy_1.NSLocationStrategy,\n            platform_providers_1.FrameService])\n    ], RouterExtensions);\n    return RouterExtensions;\n}());\nexports.RouterExtensions = RouterExtensions;\n"]}