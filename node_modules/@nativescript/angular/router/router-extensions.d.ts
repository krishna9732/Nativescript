import { Router, UrlTree, NavigationExtras, ActivatedRoute } from "@angular/router";
import { NSLocationStrategy, NavigationOptions } from "./ns-location-strategy";
import { FrameService } from "../platform-providers";
import * as ɵngcc0 from '@angular/core';
export declare type ExtendedNavigationExtras = NavigationExtras & NavigationOptions;
export interface BackNavigationOptions {
    outlets?: Array<string>;
    relativeTo?: ActivatedRoute | null;
}
export declare class RouterExtensions {
    router: Router;
    locationStrategy: NSLocationStrategy;
    frameService: FrameService;
    constructor(router: Router, locationStrategy: NSLocationStrategy, frameService: FrameService);
    navigate(commands: any[], extras?: ExtendedNavigationExtras): Promise<boolean>;
    navigateByUrl(url: string | UrlTree, options?: NavigationOptions): Promise<boolean>;
    back(backNavigationOptions?: BackNavigationOptions): void;
    canGoBack(backNavigationOptions?: BackNavigationOptions): boolean;
    backToPreviousPage(): void;
    canGoBackToPreviousPage(): boolean;
    private backOutlets;
    private findOutletsToBack;
    private findOutletByRoute;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RouterExtensions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<RouterExtensions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWV4dGVuc2lvbnMuZC50cyIsInNvdXJjZXMiOlsicm91dGVyLWV4dGVuc2lvbnMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyLCBVcmxUcmVlLCBOYXZpZ2F0aW9uRXh0cmFzLCBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcbmltcG9ydCB7IE5TTG9jYXRpb25TdHJhdGVneSwgTmF2aWdhdGlvbk9wdGlvbnMgfSBmcm9tIFwiLi9ucy1sb2NhdGlvbi1zdHJhdGVneVwiO1xuaW1wb3J0IHsgRnJhbWVTZXJ2aWNlIH0gZnJvbSBcIi4uL3BsYXRmb3JtLXByb3ZpZGVyc1wiO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBFeHRlbmRlZE5hdmlnYXRpb25FeHRyYXMgPSBOYXZpZ2F0aW9uRXh0cmFzICYgTmF2aWdhdGlvbk9wdGlvbnM7XG5leHBvcnQgaW50ZXJmYWNlIEJhY2tOYXZpZ2F0aW9uT3B0aW9ucyB7XG4gICAgb3V0bGV0cz86IEFycmF5PHN0cmluZz47XG4gICAgcmVsYXRpdmVUbz86IEFjdGl2YXRlZFJvdXRlIHwgbnVsbDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJvdXRlckV4dGVuc2lvbnMge1xuICAgIHJvdXRlcjogUm91dGVyO1xuICAgIGxvY2F0aW9uU3RyYXRlZ3k6IE5TTG9jYXRpb25TdHJhdGVneTtcbiAgICBmcmFtZVNlcnZpY2U6IEZyYW1lU2VydmljZTtcbiAgICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IFJvdXRlciwgbG9jYXRpb25TdHJhdGVneTogTlNMb2NhdGlvblN0cmF0ZWd5LCBmcmFtZVNlcnZpY2U6IEZyYW1lU2VydmljZSk7XG4gICAgbmF2aWdhdGUoY29tbWFuZHM6IGFueVtdLCBleHRyYXM/OiBFeHRlbmRlZE5hdmlnYXRpb25FeHRyYXMpOiBQcm9taXNlPGJvb2xlYW4+O1xuICAgIG5hdmlnYXRlQnlVcmwodXJsOiBzdHJpbmcgfCBVcmxUcmVlLCBvcHRpb25zPzogTmF2aWdhdGlvbk9wdGlvbnMpOiBQcm9taXNlPGJvb2xlYW4+O1xuICAgIGJhY2soYmFja05hdmlnYXRpb25PcHRpb25zPzogQmFja05hdmlnYXRpb25PcHRpb25zKTogdm9pZDtcbiAgICBjYW5Hb0JhY2soYmFja05hdmlnYXRpb25PcHRpb25zPzogQmFja05hdmlnYXRpb25PcHRpb25zKTogYm9vbGVhbjtcbiAgICBiYWNrVG9QcmV2aW91c1BhZ2UoKTogdm9pZDtcbiAgICBjYW5Hb0JhY2tUb1ByZXZpb3VzUGFnZSgpOiBib29sZWFuO1xuICAgIHByaXZhdGUgYmFja091dGxldHM7XG4gICAgcHJpdmF0ZSBmaW5kT3V0bGV0c1RvQmFjaztcbiAgICBwcml2YXRlIGZpbmRPdXRsZXRCeVJvdXRlO1xufVxuIl19