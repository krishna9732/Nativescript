import { ModuleWithProviders } from "@angular/core";
import { Routes, ExtraOptions } from "@angular/router";
import { NSRouterLink } from "./ns-router-link";
import { NSRouterLinkActive } from "./ns-router-link-active";
import { PageRouterOutlet } from "./page-router-outlet";
import { NSLocationStrategy } from "./ns-location-strategy";
import { FrameService } from "../platform-providers";
import { NSEmptyOutletComponent } from "./ns-empty-outlet.component";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ns-router-link';
import * as ɵngcc2 from './ns-router-link-active';
import * as ɵngcc3 from './page-router-outlet';
import * as ɵngcc4 from './ns-empty-outlet.component';
import * as ɵngcc5 from '@angular/router';
import * as ɵngcc6 from '../common';
export { PageRoute } from "./page-router-outlet";
export { RouterExtensions } from "./router-extensions";
export { NSModuleFactoryLoader } from "./ns-module-factory-loader";
export { NSRouterLink, NSRouterLinkActive, PageRouterOutlet, NSEmptyOutletComponent, NSLocationStrategy };
export declare function provideLocationStrategy(locationStrategy: NSLocationStrategy, frameService: FrameService): NSLocationStrategy;
export declare class NativeScriptRouterModule {
    static forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders<NativeScriptRouterModule>;
    static forChild(routes: Routes): ModuleWithProviders<NativeScriptRouterModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<NativeScriptRouterModule, [typeof ɵngcc1.NSRouterLink, typeof ɵngcc2.NSRouterLinkActive, typeof ɵngcc3.PageRouterOutlet, typeof ɵngcc4.NSEmptyOutletComponent], [typeof ɵngcc5.RouterModule, typeof ɵngcc6.NativeScriptCommonModule], [typeof ɵngcc5.RouterModule, typeof ɵngcc1.NSRouterLink, typeof ɵngcc2.NSRouterLinkActive, typeof ɵngcc3.PageRouterOutlet, typeof ɵngcc4.NSEmptyOutletComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<NativeScriptRouterModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5kLnRzIiwic291cmNlcyI6WyJyb3V0ZXIubW9kdWxlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUm91dGVzLCBFeHRyYU9wdGlvbnMgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG5pbXBvcnQgeyBOU1JvdXRlckxpbmsgfSBmcm9tIFwiLi9ucy1yb3V0ZXItbGlua1wiO1xuaW1wb3J0IHsgTlNSb3V0ZXJMaW5rQWN0aXZlIH0gZnJvbSBcIi4vbnMtcm91dGVyLWxpbmstYWN0aXZlXCI7XG5pbXBvcnQgeyBQYWdlUm91dGVyT3V0bGV0IH0gZnJvbSBcIi4vcGFnZS1yb3V0ZXItb3V0bGV0XCI7XG5pbXBvcnQgeyBOU0xvY2F0aW9uU3RyYXRlZ3kgfSBmcm9tIFwiLi9ucy1sb2NhdGlvbi1zdHJhdGVneVwiO1xuaW1wb3J0IHsgRnJhbWVTZXJ2aWNlIH0gZnJvbSBcIi4uL3BsYXRmb3JtLXByb3ZpZGVyc1wiO1xuaW1wb3J0IHsgTlNFbXB0eU91dGxldENvbXBvbmVudCB9IGZyb20gXCIuL25zLWVtcHR5LW91dGxldC5jb21wb25lbnRcIjtcbmV4cG9ydCB7IFBhZ2VSb3V0ZSB9IGZyb20gXCIuL3BhZ2Utcm91dGVyLW91dGxldFwiO1xuZXhwb3J0IHsgUm91dGVyRXh0ZW5zaW9ucyB9IGZyb20gXCIuL3JvdXRlci1leHRlbnNpb25zXCI7XG5leHBvcnQgeyBOU01vZHVsZUZhY3RvcnlMb2FkZXIgfSBmcm9tIFwiLi9ucy1tb2R1bGUtZmFjdG9yeS1sb2FkZXJcIjtcbmV4cG9ydCB7IE5TUm91dGVyTGluaywgTlNSb3V0ZXJMaW5rQWN0aXZlLCBQYWdlUm91dGVyT3V0bGV0LCBOU0VtcHR5T3V0bGV0Q29tcG9uZW50LCBOU0xvY2F0aW9uU3RyYXRlZ3kgfTtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHByb3ZpZGVMb2NhdGlvblN0cmF0ZWd5KGxvY2F0aW9uU3RyYXRlZ3k6IE5TTG9jYXRpb25TdHJhdGVneSwgZnJhbWVTZXJ2aWNlOiBGcmFtZVNlcnZpY2UpOiBOU0xvY2F0aW9uU3RyYXRlZ3k7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUge1xuICAgIHN0YXRpYyBmb3JSb290KHJvdXRlczogUm91dGVzLCBjb25maWc/OiBFeHRyYU9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZT47XG4gICAgc3RhdGljIGZvckNoaWxkKHJvdXRlczogUm91dGVzKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGU+O1xufVxuIl19