{"version":3,"file":"date-value-accessor.js","sources":["date-value-accessor.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAWO;AACP;;;;;;;;;;;;;;;;;2EAA0B;AAC1B;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar DATE_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return DateValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePicker [(ngModel)]=\"model.test\">\n *  ```\n */\nvar DateValueAccessor = /** @class */ (function (_super) {\n    __extends(DateValueAccessor, _super);\n    function DateValueAccessor(elementRef) {\n        return _super.call(this, elementRef.nativeElement) || this;\n    }\n    DateValueAccessor.prototype.writeValue = function (value) {\n        var normalized = _super.prototype.normalizeValue.call(this, value);\n        this.view.date = normalized;\n    };\n    DateValueAccessor = __decorate([\n        core_1.Directive({\n            selector: \"DatePicker[ngModel],DatePicker[formControlName],DatePicker[formControl],\" +\n                \"datepicker[ngModel],datepicker[formControlName],datepicker[formControl],\" +\n                \"datePicker[ngModel],datePicker[formControlName],datePicker[formControl],\" +\n                \"date-picker[ngModel],date-picker[formControlName],date-picker[formControl]\",\n            providers: [DATE_VALUE_ACCESSOR],\n            host: {\n                \"(dateChange)\": \"onChange($event.value)\",\n            },\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], DateValueAccessor);\n    return DateValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\nexports.DateValueAccessor = DateValueAccessor;\n"]}