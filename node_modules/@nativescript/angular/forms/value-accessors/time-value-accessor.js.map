{"version":3,"file":"time-value-accessor.js","sources":["time-value-accessor.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAWO;AACP;;;;;;;;;;;;;;;;;2EAA0B;AAC1B;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar TIME_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return TimeValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePicker [(ngModel)]=\"model.test\">\n *  ```\n */\nvar TimeValueAccessor = /** @class */ (function (_super) {\n    __extends(TimeValueAccessor, _super);\n    function TimeValueAccessor(elementRef) {\n        return _super.call(this, elementRef.nativeElement) || this;\n    }\n    TimeValueAccessor.prototype.writeValue = function (value) {\n        var normalized = _super.prototype.normalizeValue.call(this, value);\n        this.view.time = normalized;\n    };\n    TimeValueAccessor = __decorate([\n        core_1.Directive({\n            selector: \"TimePicker[ngModel],TimePicker[formControlName],TimePicker[formControl],\" +\n                \"timepicker[ngModel],timepicker[formControlName],timepicker[formControl],\" +\n                \"timePicker[ngModel],timePicker[formControlName],timePicker[formControl],\" +\n                \"time-picker[ngModel],time-picker[formControlName],time-picker[formControl]\",\n            providers: [TIME_VALUE_ACCESSOR],\n            host: {\n                \"(timeChange)\": \"onChange($event.value)\",\n            },\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], TimeValueAccessor);\n    return TimeValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\nexports.TimeValueAccessor = TimeValueAccessor;\n"]}