{"version":3,"file":"selectedIndex-value-accessor.js","sources":["selectedIndex-value-accessor.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAmBO;AACP;;;;;;;;;;;;;;;;;;;;;;;;;2EAAmC;AACnC;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar SELECTED_INDEX_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectedIndexValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for setting a selectedIndex and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <SegmentedBar [(ngModel)]=\"model.test\">\n *  ```\n */\nvar SelectedIndexValueAccessor = /** @class */ (function (_super) {\n    __extends(SelectedIndexValueAccessor, _super);\n    function SelectedIndexValueAccessor(elementRef) {\n        return _super.call(this, elementRef.nativeElement) || this;\n    }\n    SelectedIndexValueAccessor.prototype.writeValue = function (value) {\n        var normalized = _super.prototype.normalizeValue.call(this, value);\n        this.value = normalized;\n        if (this.viewInitialized) {\n            this.view.selectedIndex = this.value;\n        }\n    };\n    SelectedIndexValueAccessor.prototype.ngAfterViewInit = function () {\n        this.viewInitialized = true;\n        this.view.selectedIndex = this.value;\n    };\n    SelectedIndexValueAccessor = __decorate([\n        core_1.Directive({\n            selector: \"SegmentedBar[ngModel],SegmentedBar[formControlName],SegmentedBar[formControl],\" +\n                \"segmentedBar[ngModel],segmentedBar[formControlName],segmentedBar[formControl],\" +\n                \"segmentedbar[ngModel],segmentedbar[formControlName],segmentedbar[formControl],\" +\n                \"segmented-bar[ngModel],segmented-bar[formControlName],segmented-bar[formControl],\" +\n                \"ListPicker[ngModel],ListPicker[formControlName],ListPicker[formControl],\" +\n                \"listPicker[ngModel],listPicker[formControlName],listPicker[formControl],\" +\n                \"listpicker[ngModel],listpicker[formControlName],listpicker[formControl],\" +\n                \"list-picker[ngModel],list-picker[formControlName],list-picker[formControl],\" +\n                \"TabView[ngModel],TabView[formControlName],TabView[formControl],\" +\n                \"tabView[ngModel],tabView[formControlName],tabView[formControl],\" +\n                \"tabview[ngModel],tabview[formControlName],tabview[formControl],\" +\n                \"tab-view[ngModel],tab-view[formControlName],tab-view[formControl]\",\n            providers: [SELECTED_INDEX_VALUE_ACCESSOR],\n            host: {\n                \"(selectedIndexChange)\": \"onChange($event.value)\",\n            },\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], SelectedIndexValueAccessor);\n    return SelectedIndexValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\nexports.SelectedIndexValueAccessor = SelectedIndexValueAccessor;\n"]}