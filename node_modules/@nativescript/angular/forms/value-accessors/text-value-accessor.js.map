{"version":3,"file":"text-value-accessor.js","sources":["text-value-accessor.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAoBO;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;2EAA0B;AAC1B;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar TEXT_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return TextValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a text and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TextField [(ngModel)]=\"model.test\">\n *  ```\n */\nvar TextValueAccessor = /** @class */ (function (_super) {\n    __extends(TextValueAccessor, _super);\n    function TextValueAccessor(elementRef) {\n        return _super.call(this, elementRef.nativeElement) || this;\n    }\n    TextValueAccessor.prototype.writeValue = function (value) {\n        var normalized = _super.prototype.normalizeValue.call(this, value);\n        this.view.text = normalized;\n    };\n    TextValueAccessor = __decorate([\n        core_1.Directive({\n            selector: \"TextField[ngModel],TextField[formControlName],TextField[formControl],\" +\n                \"textField[ngModel],textField[formControlName],textField[formControl],\" +\n                \"textfield[ngModel],textfield[formControlName],textfield[formControl],\" +\n                \"text-field[ngModel],text-field[formControlName],text-field[formControl],\" +\n                \"TextView[ngModel],TextView[formControlName],TextView[formControl],\" +\n                \"textView[ngModel],textView[formControlName],textView[formControl],\" +\n                \"textview[ngModel],textview[formControlName],textview[formControl],\" +\n                \"text-view[ngModel],text-view[formControlName],text-view[formControl],\" +\n                \"SearchBar[ngModel],SearchBar[formControlName],SearchBar[formControl],\" +\n                \"searchBar[ngModel],searchBar[formControlName],searchBar[formControl],\" +\n                \"searchbar[ngModel],searchbar[formControlName],searchbar[formControl],\" +\n                \"search-bar[ngModel], search-bar[formControlName],search-bar[formControl]\",\n            providers: [TEXT_VALUE_ACCESSOR],\n            host: {\n                \"(blur)\": \"onTouched()\",\n                \"(textChange)\": \"onChange($event.value)\",\n            },\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], TextValueAccessor);\n    return TextValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\nexports.TextValueAccessor = TextValueAccessor;\n"]}