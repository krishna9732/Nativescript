Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var file_system_1 = require("@nativescript/core/file-system");
// Allows greater flexibility with `file-system` and Angular
// Also provides a way for `file-system` to be mocked for testing
var ɵngcc0 = require('@angular/core');
var NSFileSystem = /** @class */ (function () {
    function NSFileSystem() {
    }
    NSFileSystem.prototype.currentApp = function () {
        return file_system_1.knownFolders.currentApp();
    };
    NSFileSystem.prototype.fileFromPath = function (path) {
        return file_system_1.File.fromPath(path);
    };
    NSFileSystem.prototype.fileExists = function (path) {
        return file_system_1.File.exists(path);
    };
NSFileSystem.ɵfac = function NSFileSystem_Factory(t) { return new (t || NSFileSystem)(); };
NSFileSystem.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NSFileSystem, factory: function (t) { return NSFileSystem.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NSFileSystem, [{
        type: core_1.Injectable
    }], function () { return []; }, null); })();
    return NSFileSystem;
}());
exports.NSFileSystem = NSFileSystem;

//# sourceMappingURL=ns-file-system.js.map