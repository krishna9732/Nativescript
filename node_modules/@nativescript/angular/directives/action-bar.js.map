{"version":3,"file":"action-bar.js","sources":["action-bar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAKO;AACP;;;;;;;;;;;;kGAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAKO;AACP;;;;;;;;;qEAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAIO;AACP;AACA;;;;;;;;;;kCAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAIO;AACP;AACA;;;;;;;;;;kCAAkC;AAClC;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar action_bar_1 = require(\"@nativescript/core/ui/action-bar\");\nvar page_1 = require(\"@nativescript/core/ui/page\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar element_registry_1 = require(\"../element-registry\");\nfunction isActionItem(view) {\n    return view instanceof action_bar_1.ActionItem;\n}\nexports.isActionItem = isActionItem;\nfunction isNavigationButton(view) {\n    return view instanceof action_bar_1.NavigationButton;\n}\nexports.isNavigationButton = isNavigationButton;\nvar ɵ0 = function (parent, child, next) {\n    if (element_registry_1.isInvisibleNode(child)) {\n        return;\n    }\n    else if (isNavigationButton(child)) {\n        parent.navigationButton = child;\n        child.parentNode = parent;\n    }\n    else if (isActionItem(child)) {\n        addActionItem(parent, child, next);\n        child.parentNode = parent;\n    }\n    else if (element_registry_1.isView(child)) {\n        parent.titleView = child;\n    }\n}, ɵ1 = function (parent, child) {\n    if (element_registry_1.isInvisibleNode(child)) {\n        return;\n    }\n    else if (isNavigationButton(child)) {\n        if (parent.navigationButton === child) {\n            parent.navigationButton = null;\n        }\n        child.parentNode = null;\n    }\n    else if (isActionItem(child)) {\n        parent.actionItems.removeItem(child);\n        child.parentNode = null;\n    }\n    else if (element_registry_1.isView(child) && parent.titleView && parent.titleView === child) {\n        parent.titleView = null;\n    }\n};\nexports.ɵ0 = ɵ0;\nexports.ɵ1 = ɵ1;\nvar actionBarMeta = {\n    skipAddToDom: true,\n    insertChild: ɵ0,\n    removeChild: ɵ1,\n};\nvar addActionItem = function (bar, item, next) {\n    if (next) {\n        insertActionItemBefore(bar, item, next);\n    }\n    else {\n        appendActionItem(bar, item);\n    }\n};\nvar ɵ2 = addActionItem;\nexports.ɵ2 = ɵ2;\nvar insertActionItemBefore = function (bar, item, next) {\n    var actionItems = bar.actionItems;\n    var actionItemsCollection = actionItems.getItems();\n    var indexToInsert = actionItemsCollection.indexOf(next);\n    actionItemsCollection.splice(indexToInsert, 0, item);\n    actionItems.setItems(actionItemsCollection);\n};\nvar ɵ3 = insertActionItemBefore;\nexports.ɵ3 = ɵ3;\nvar appendActionItem = function (bar, item) {\n    bar.actionItems.addItem(item);\n};\nvar ɵ4 = appendActionItem;\nexports.ɵ4 = ɵ4;\nelement_registry_1.registerElement(\"ActionBar\", function () { return action_bar_1.ActionBar; }, actionBarMeta);\nelement_registry_1.registerElement(\"ActionItem\", function () { return action_bar_1.ActionItem; });\nelement_registry_1.registerElement(\"NavigationButton\", function () { return action_bar_1.NavigationButton; });\nvar ActionBarComponent = /** @class */ (function () {\n    function ActionBarComponent(element, page) {\n        this.element = element;\n        this.page = page;\n        if (!this.page) {\n            throw new Error(\"Inside ActionBarComponent but no Page found in DI.\");\n        }\n        if (lang_facade_1.isBlank(this.page.actionBarHidden)) {\n            this.page.actionBarHidden = false;\n        }\n        this.page.actionBar = this.element.nativeElement;\n        this.page.actionBar.update();\n    }\n    ActionBarComponent = __decorate([\n        core_1.Component({\n            selector: \"ActionBar\",\n            template: \"<ng-content></ng-content>\"\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, page_1.Page])\n    ], ActionBarComponent);\n    return ActionBarComponent;\n}());\nexports.ActionBarComponent = ActionBarComponent;\nvar ActionBarScope = /** @class */ (function () {\n    function ActionBarScope(page) {\n        this.page = page;\n        if (!this.page) {\n            throw new Error(\"Inside ActionBarScope but no Page found in DI.\");\n        }\n    }\n    ActionBarScope.prototype.onNavButtonInit = function (navBtn) {\n        this.page.actionBar.navigationButton = navBtn.element.nativeElement;\n    };\n    ActionBarScope.prototype.onNavButtonDestroy = function (navBtn) {\n        var nav = navBtn.element.nativeElement;\n        if (nav && this.page.actionBar.navigationButton === nav) {\n            this.page.actionBar.navigationButton = null;\n        }\n    };\n    ActionBarScope.prototype.onActionInit = function (item) {\n        this.page.actionBar.actionItems.addItem(item.element.nativeElement);\n    };\n    ActionBarScope.prototype.onActionDestroy = function (item) {\n        if (item.element.nativeElement.actionBar) {\n            this.page.actionBar.actionItems.removeItem(item.element.nativeElement);\n        }\n    };\n    ActionBarScope = __decorate([\n        core_1.Component({\n            selector: \"ActionBarExtension\",\n            template: \"\"\n        }),\n        __metadata(\"design:paramtypes\", [page_1.Page])\n    ], ActionBarScope);\n    return ActionBarScope;\n}());\nexports.ActionBarScope = ActionBarScope;\nvar ActionItemDirective = /** @class */ (function () {\n    function ActionItemDirective(element, ownerScope) {\n        this.element = element;\n        this.ownerScope = ownerScope;\n        if (this.ownerScope) {\n            this.ownerScope.onActionInit(this);\n        }\n    }\n    ActionItemDirective.prototype.ngOnDestroy = function () {\n        if (this.ownerScope) {\n            this.ownerScope.onActionDestroy(this);\n        }\n    };\n    ActionItemDirective = __decorate([\n        core_1.Directive({\n            selector: \"ActionItem\" // tslint:disable-line:directive-selector\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, ActionBarScope])\n    ], ActionItemDirective);\n    return ActionItemDirective;\n}());\nexports.ActionItemDirective = ActionItemDirective;\nvar NavigationButtonDirective = /** @class */ (function () {\n    function NavigationButtonDirective(element, ownerScope) {\n        this.element = element;\n        this.ownerScope = ownerScope;\n        if (this.ownerScope) {\n            this.ownerScope.onNavButtonInit(this);\n        }\n    }\n    NavigationButtonDirective.prototype.ngOnDestroy = function () {\n        if (this.ownerScope) {\n            this.ownerScope.onNavButtonDestroy(this);\n        }\n    };\n    NavigationButtonDirective = __decorate([\n        core_1.Directive({\n            selector: \"NavigationButton\" // tslint:disable-line:directive-selector\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, ActionBarScope])\n    ], NavigationButtonDirective);\n    return NavigationButtonDirective;\n}());\nexports.NavigationButtonDirective = NavigationButtonDirective;\n"]}