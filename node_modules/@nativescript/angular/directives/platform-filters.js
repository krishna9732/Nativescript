Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var platform_1 = require("@nativescript/core/platform");
var platform_providers_1 = require("../platform-providers");
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('@angular/common');

function AndroidFilterComponent_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "show"]);
} }
var _c0 = ["*"];
function IosFilterComponent_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "show"]);
} }
var AndroidFilterComponent = /** @class */ (function () {
    function AndroidFilterComponent(device) {
        this.show = (device.os === platform_1.platformNames.android);
    }
    AndroidFilterComponent = __decorate([ __param(0, core_1.Inject(platform_providers_1.DEVICE)),
        __metadata("design:paramtypes", [Object])
    ], AndroidFilterComponent);
AndroidFilterComponent.ɵfac = function AndroidFilterComponent_Factory(t) { return new (t || AndroidFilterComponent)(ɵngcc0.ɵɵdirectiveInject(platform_providers_1.DEVICE)); };
AndroidFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AndroidFilterComponent, selectors: [["android"]], ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function AndroidFilterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AndroidFilterComponent_0_Template, 1, 0, undefined, 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.show);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AndroidFilterComponent, [{
        type: core_1.Component,
        args: [{
                selector: "android",
                template: "<ng-content *ngIf=\"show\"></ng-content>"
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: core_1.Inject,
                args: [platform_providers_1.DEVICE]
            }] }]; }, null); })();
    return AndroidFilterComponent;
}());
exports.AndroidFilterComponent = AndroidFilterComponent;
var IosFilterComponent = /** @class */ (function () {
    function IosFilterComponent(device) {
        this.show = (device.os === platform_1.platformNames.ios);
    }
    IosFilterComponent = __decorate([ __param(0, core_1.Inject(platform_providers_1.DEVICE)),
        __metadata("design:paramtypes", [Object])
    ], IosFilterComponent);
IosFilterComponent.ɵfac = function IosFilterComponent_Factory(t) { return new (t || IosFilterComponent)(ɵngcc0.ɵɵdirectiveInject(platform_providers_1.DEVICE)); };
IosFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IosFilterComponent, selectors: [["ios"]], ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function IosFilterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, IosFilterComponent_0_Template, 1, 0, undefined, 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.show);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IosFilterComponent, [{
        type: core_1.Component,
        args: [{
                selector: "ios",
                template: "<ng-content *ngIf=\"show\"></ng-content>"
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: core_1.Inject,
                args: [platform_providers_1.DEVICE]
            }] }]; }, null); })();
    return IosFilterComponent;
}());
exports.IosFilterComponent = IosFilterComponent;

//# sourceMappingURL=platform-filters.js.map