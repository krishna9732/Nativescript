{"version":3,"file":"ns-http-backend.js","sources":["ns-http-backend.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAEO;AACP;;;;;oHAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar ns_file_system_1 = require(\"../file-system/ns-file-system\");\nvar http_utils_1 = require(\"./http-utils\");\nvar NsHttpBackEnd = /** @class */ (function (_super) {\n    __extends(NsHttpBackEnd, _super);\n    function NsHttpBackEnd(xhrFactory, nsFileSystem) {\n        var _this = _super.call(this, xhrFactory) || this;\n        _this.nsFileSystem = nsFileSystem;\n        return _this;\n    }\n    NsHttpBackEnd.prototype.handle = function (req) {\n        var result;\n        if (http_utils_1.isLocalRequest(req.url)) {\n            result = this.handleLocalFileRequest(req.url);\n        }\n        else {\n            result = _super.prototype.handle.call(this, req);\n        }\n        return result;\n    };\n    NsHttpBackEnd.prototype.handleLocalFileRequest = function (url) {\n        return http_utils_1.processLocalFileRequest(url, this.nsFileSystem, createSuccessResponse, createErrorResponse);\n    };\n    NsHttpBackEnd = __decorate([\n        core_1.Injectable(),\n        __metadata(\"design:paramtypes\", [http_1.XhrFactory, ns_file_system_1.NSFileSystem])\n    ], NsHttpBackEnd);\n    return NsHttpBackEnd;\n}(http_1.HttpXhrBackend));\nexports.NsHttpBackEnd = NsHttpBackEnd;\nfunction createSuccessResponse(url, body, status) {\n    return new http_1.HttpResponse({\n        url: url,\n        body: body,\n        status: status,\n        statusText: \"OK\"\n    });\n}\nfunction createErrorResponse(url, body, status) {\n    return new http_1.HttpErrorResponse({\n        url: url,\n        error: body,\n        status: status,\n        statusText: \"ERROR\"\n    });\n}\n"]}