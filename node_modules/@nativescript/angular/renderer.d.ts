import { NgZone, Renderer2, RendererFactory2, RendererType2, RendererStyleFlags2 } from "@angular/core";
import { Device } from "@nativescript/core/platform";
import { View } from "@nativescript/core/ui/core/view";
import { ViewUtil } from "./view-util";
import { NgView, InvisibleNode } from "./element-registry";
import * as ɵngcc0 from '@angular/core';
export declare const COMPONENT_VARIABLE = "%COMP%";
export declare const HOST_ATTR: string;
export declare const CONTENT_ATTR: string;
export interface ElementReference {
    previous: NgView;
    next: NgView;
}
export declare class NativeScriptRendererFactory implements RendererFactory2 {
    private zone;
    private componentRenderers;
    private viewUtil;
    private defaultRenderer;
    private rootNgView;
    constructor(rootView: View, device: Device, zone: NgZone);
    private setRootNgView;
    createRenderer(element: any, type: RendererType2): NativeScriptRenderer;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NativeScriptRendererFactory, [{ optional: true; }, null, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NativeScriptRendererFactory>;
}
export declare class NativeScriptRenderer extends Renderer2 {
    private rootView;
    private zone;
    private viewUtil;
    data: {
        [key: string]: any;
    };
    constructor(rootView: NgView, zone: NgZone, viewUtil: ViewUtil);
    appendChild(parent: NgView, newChild: NgView): void;
    insertBefore(parent: NgView, newChild: NgView, { previous, next }: ElementReference): void;
    removeChild(parent: any, oldChild: NgView): void;
    selectRootElement(selector: string): NgView;
    parentNode(node: NgView): any;
    nextSibling(node: NgView): ElementReference;
    createComment(_value: any): InvisibleNode;
    createElement(name: any, _namespace: string): NgView;
    createText(_value: string): InvisibleNode;
    createViewRoot(hostElement: NgView): NgView;
    projectNodes(parentElement: NgView, nodes: NgView[]): void;
    destroy(): void;
    setAttribute(view: NgView, name: string, value: string, namespace?: string): void;
    removeAttribute(_el: NgView, _name: string): void;
    setProperty(view: any, name: string, value: any): void;
    addClass(view: NgView, name: string): void;
    removeClass(view: NgView, name: string): void;
    setStyle(view: NgView, styleName: string, value: any, _flags?: RendererStyleFlags2): void;
    removeStyle(view: NgView, styleName: string, _flags?: RendererStyleFlags2): void;
    setBindingDebugInfo(renderElement: NgView, propertyName: string, propertyValue: string): void;
    setElementDebugInfo(renderElement: any, _info: any): void;
    invokeElementMethod(_renderElement: NgView, methodName: string, args: Array<any>): void;
    setValue(_renderNode: any, _value: string): void;
    listen(renderElement: any, eventName: string, callback: (event: any) => boolean): () => void;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyZXIuZC50cyIsInNvdXJjZXMiOlsicmVuZGVyZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBSZW5kZXJlcjIsIFJlbmRlcmVyRmFjdG9yeTIsIFJlbmRlcmVyVHlwZTIsIFJlbmRlcmVyU3R5bGVGbGFnczIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRGV2aWNlIH0gZnJvbSBcIkBuYXRpdmVzY3JpcHQvY29yZS9wbGF0Zm9ybVwiO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gXCJAbmF0aXZlc2NyaXB0L2NvcmUvdWkvY29yZS92aWV3XCI7XG5pbXBvcnQgeyBWaWV3VXRpbCB9IGZyb20gXCIuL3ZpZXctdXRpbFwiO1xuaW1wb3J0IHsgTmdWaWV3LCBJbnZpc2libGVOb2RlIH0gZnJvbSBcIi4vZWxlbWVudC1yZWdpc3RyeVwiO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQ09NUE9ORU5UX1ZBUklBQkxFID0gXCIlQ09NUCVcIjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEhPU1RfQVRUUjogc3RyaW5nO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQ09OVEVOVF9BVFRSOiBzdHJpbmc7XG5leHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRSZWZlcmVuY2Uge1xuICAgIHByZXZpb3VzOiBOZ1ZpZXc7XG4gICAgbmV4dDogTmdWaWV3O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmF0aXZlU2NyaXB0UmVuZGVyZXJGYWN0b3J5IGltcGxlbWVudHMgUmVuZGVyZXJGYWN0b3J5MiB7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgY29tcG9uZW50UmVuZGVyZXJzO1xuICAgIHByaXZhdGUgdmlld1V0aWw7XG4gICAgcHJpdmF0ZSBkZWZhdWx0UmVuZGVyZXI7XG4gICAgcHJpdmF0ZSByb290TmdWaWV3O1xuICAgIGNvbnN0cnVjdG9yKHJvb3RWaWV3OiBWaWV3LCBkZXZpY2U6IERldmljZSwgem9uZTogTmdab25lKTtcbiAgICBwcml2YXRlIHNldFJvb3ROZ1ZpZXc7XG4gICAgY3JlYXRlUmVuZGVyZXIoZWxlbWVudDogYW55LCB0eXBlOiBSZW5kZXJlclR5cGUyKTogTmF0aXZlU2NyaXB0UmVuZGVyZXI7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdGl2ZVNjcmlwdFJlbmRlcmVyIGV4dGVuZHMgUmVuZGVyZXIyIHtcbiAgICBwcml2YXRlIHJvb3RWaWV3O1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIHZpZXdVdGlsO1xuICAgIGRhdGE6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuICAgIH07XG4gICAgY29uc3RydWN0b3Iocm9vdFZpZXc6IE5nVmlldywgem9uZTogTmdab25lLCB2aWV3VXRpbDogVmlld1V0aWwpO1xuICAgIGFwcGVuZENoaWxkKHBhcmVudDogTmdWaWV3LCBuZXdDaGlsZDogTmdWaWV3KTogdm9pZDtcbiAgICBpbnNlcnRCZWZvcmUocGFyZW50OiBOZ1ZpZXcsIG5ld0NoaWxkOiBOZ1ZpZXcsIHsgcHJldmlvdXMsIG5leHQgfTogRWxlbWVudFJlZmVyZW5jZSk6IHZvaWQ7XG4gICAgcmVtb3ZlQ2hpbGQocGFyZW50OiBhbnksIG9sZENoaWxkOiBOZ1ZpZXcpOiB2b2lkO1xuICAgIHNlbGVjdFJvb3RFbGVtZW50KHNlbGVjdG9yOiBzdHJpbmcpOiBOZ1ZpZXc7XG4gICAgcGFyZW50Tm9kZShub2RlOiBOZ1ZpZXcpOiBhbnk7XG4gICAgbmV4dFNpYmxpbmcobm9kZTogTmdWaWV3KTogRWxlbWVudFJlZmVyZW5jZTtcbiAgICBjcmVhdGVDb21tZW50KF92YWx1ZTogYW55KTogSW52aXNpYmxlTm9kZTtcbiAgICBjcmVhdGVFbGVtZW50KG5hbWU6IGFueSwgX25hbWVzcGFjZTogc3RyaW5nKTogTmdWaWV3O1xuICAgIGNyZWF0ZVRleHQoX3ZhbHVlOiBzdHJpbmcpOiBJbnZpc2libGVOb2RlO1xuICAgIGNyZWF0ZVZpZXdSb290KGhvc3RFbGVtZW50OiBOZ1ZpZXcpOiBOZ1ZpZXc7XG4gICAgcHJvamVjdE5vZGVzKHBhcmVudEVsZW1lbnQ6IE5nVmlldywgbm9kZXM6IE5nVmlld1tdKTogdm9pZDtcbiAgICBkZXN0cm95KCk6IHZvaWQ7XG4gICAgc2V0QXR0cmlidXRlKHZpZXc6IE5nVmlldywgbmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBuYW1lc3BhY2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgIHJlbW92ZUF0dHJpYnV0ZShfZWw6IE5nVmlldywgX25hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgc2V0UHJvcGVydHkodmlldzogYW55LCBuYW1lOiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIGFkZENsYXNzKHZpZXc6IE5nVmlldywgbmFtZTogc3RyaW5nKTogdm9pZDtcbiAgICByZW1vdmVDbGFzcyh2aWV3OiBOZ1ZpZXcsIG5hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgc2V0U3R5bGUodmlldzogTmdWaWV3LCBzdHlsZU5hbWU6IHN0cmluZywgdmFsdWU6IGFueSwgX2ZsYWdzPzogUmVuZGVyZXJTdHlsZUZsYWdzMik6IHZvaWQ7XG4gICAgcmVtb3ZlU3R5bGUodmlldzogTmdWaWV3LCBzdHlsZU5hbWU6IHN0cmluZywgX2ZsYWdzPzogUmVuZGVyZXJTdHlsZUZsYWdzMik6IHZvaWQ7XG4gICAgc2V0QmluZGluZ0RlYnVnSW5mbyhyZW5kZXJFbGVtZW50OiBOZ1ZpZXcsIHByb3BlcnR5TmFtZTogc3RyaW5nLCBwcm9wZXJ0eVZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIHNldEVsZW1lbnREZWJ1Z0luZm8ocmVuZGVyRWxlbWVudDogYW55LCBfaW5mbzogYW55KTogdm9pZDtcbiAgICBpbnZva2VFbGVtZW50TWV0aG9kKF9yZW5kZXJFbGVtZW50OiBOZ1ZpZXcsIG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogQXJyYXk8YW55Pik6IHZvaWQ7XG4gICAgc2V0VmFsdWUoX3JlbmRlck5vZGU6IGFueSwgX3ZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIGxpc3RlbihyZW5kZXJFbGVtZW50OiBhbnksIGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogKGV2ZW50OiBhbnkpID0+IGJvb2xlYW4pOiAoKSA9PiB2b2lkO1xufVxuIl19